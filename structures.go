package main

import "time"

type Icommand interface {
	Execute(...interface{}) (interface{}, error)
}

type IGetter interface {
	Getter(interface{})
}

//Result Structure

type Detail struct {
	URL      string `json:"URL"`
	Title    string `json:"Title"`
	Describe string `json:"Describe"`
	Info     Info   `json:"Info"`
}

type Info struct {
	Publisher string `json:"Publisher"`
	Created   string `json:"Created"`
	Updated   string `json:"Updated"`
}

//Json Unmarshal Structure(Autogenerated Customized)

type AutoGenerated struct {
	Context               string `json:"@context"`
	Type                  string `json:"@type"`
	Name                  string `json:"name"`
	URL                   string `json:"url"`
	IncludedInDataCatalog struct {
		Type string `json:"@type"`
		URL  string `json:"url"`
	} `json:"includedInDataCatalog"`
	Creator struct {
		Type string `json:"@type"`
		Name string `json:"name"`
	} `json:"creator"`
	Description string `json:"description"`
	License     struct {
		Type string      `json:"@type"`
		Name string      `json:"name"`
		Text interface{} `json:"text"`
		URL  string      `json:"url"`
	} `json:"license"`
	DateModified time.Time `json:"dateModified"`
	Keywords     string    `json:"keywords"`
	Distribution []struct {
		Type       string `json:"@type"`
		ContentURL string `json:"contentUrl"`
		FileFormat string `json:"fileFormat"`
		Name       string `json:"name"`
	} `json:"distribution"`
}
