package main

import "time"

type Icommand interface {
	Execute(...interface{}) (interface{}, error)
}

type IGetter interface {
	Getter(interface{})
}

//Result Structure

type Detail struct {
	URL      string `json:"URL"`
	Title    string `json:"Title"`
	Describe string `json:"Describe"`
	Info     Info   `json:"Info"`
}

type Info struct {
	Publisher  string `json:"Publisher"`
	Created    string `json:"Created"`
	Updated    string `json:"Updated"`
	Identifier string `json:Identifier`
}

//Json Unmarshal Structure(Autogenerated Customized)

type AutoGenerated struct {
	Context       string    `json:"@context"`
	Type          string    `json:"@type"`
	Name          string    `json:"name"`
	Description   string    `json:"description"`
	Keywords      []string  `json:"keywords"`
	DateCreated   time.Time `json:"dateCreated"`
	DatePublished time.Time `json:"datePublished"`
	Creator       []struct {
		Type string `json:"@type"`
		Name string `json:"name"`
	} `json:"creator"`
	IncludedInDataCatalog struct {
		Type string `json:"@type"`
		URL  string `json:"url"`
		Name string `json:"name"`
	} `json:"includedInDataCatalog"`
	License struct {
		Type string `json:"@type"`
		Name string `json:"name"`
	} `json:"license"`
	DateModified time.Time `json:"dateModified"`
	SameAs       []string  `json:"sameAs"`
	URL          string    `json:"url"`
	Distribution []struct {
		Type           string `json:"@type"`
		ContentURL     string `json:"contentUrl"`
		EncodingFormat string `json:"encodingFormat"`
	} `json:"distribution"`
}
